package gov.ca.cwds.jenkins

import spock.lang.Specification

class SmokeTesterSpecification extends Specification {

  class PipeLineScript {

    def error(hash) {}

    def sh(hash) { }
    
    def echo(hash) { }

    def PipeLineScript() {}
  }

  def "#runSmokeTestPasses"() {

    given:
    def passed = './test/resources/smoketest/passed.sh'
    def PipeLineScript pipeline = Mock(PipeLineScript)
    def cmd = [passed, "test"]
    def test = cmd.execute().text
//    script.sh (script: "${path} ${url}", returnStdout: true).trim()
    pipeline.sh (_) >> "smoketest passed"
    def smokeTester = new SmokeTester(pipeline)

    when:
    def abc = smokeTester.runSmokeTest(passed, "test")

    then:
    0 * pipeline.error(_)
    abc == "smoke test passed"
  }

  def "#runSmokeTestFails"() {

    given:
    def pipeline = Mock(PipeLineScript)
    def failed = './test/resources/smoketest/failed.sh'
    def smokeTester = new SmokeTester(pipeline)
    pipeline.sh (_) >> "smoketest failed"

    when:
    smokeTester.runSmokeTest(failed, "test")

    then:
    1 * pipeline.error(_)
  }

}
